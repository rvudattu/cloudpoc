name: git-django-cloud-poc


on:
  push:
    branches: [dev, prod, uat]
#   pull_request:
#     branches: [dev, prod, uat]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
#   PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  RUN_REGION: us-east4
  SERVICE_NAME: oms-django-git-poc-${{ github.ref_name }}



jobs:
  setup-build-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.7'

    - uses: actions/checkout@v3
    
    - name: Tag
      id: autotagger
      uses: butlerlogic/action-autotag@stable
      with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
          
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
#           tag_name: ${{ github.ref }}run_number
#           release_name: Release ${{ github.ref }}
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false



#     - name: Release
#       id: create_release
#       if: steps.autotagger.outputs.tagname != ''
#       uses: actions/create-release@v1.0.0
#       env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#           tag_name: ${{ steps.autotagger.outputs.tagname }}
#           release_name: Version ${{ steps.autotagger.outputs.version }}
#           body: ${{ steps.autotagger.outputs.tagmessage }}
#           draft: false
#           prerelease: true

#     - name: Publish
#       id: publish_npm
#       if: steps.autotagger.outputs.tagname != ''
#       uses: author/action-publish@stable
#       env:
#           REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}


          
#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#       with:
# #           tag_name: ${{ github.ref }}run_number
# #           release_name: Release ${{ github.ref }}
#           tag_name: ${{ github.run_number }}
#           release_name: Release ${{ github.run_number }}
#           body: |
#             Changes in this Release
#             - First Change
#             - Second Change
#           draft: false
#           prerelease: false
          
    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
#        version: '290.0.1'
        version: '318.0.0'
        service_account_key: ${{ secrets.RUN_SA_KEY }}
        project_id: ${{ secrets.RUN_PROJECT }}


    # Build and push image to Google Container Registry	   

    - name: Build and Push Container
      run: |-
        gcloud builds submit \
          --quiet \
          --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{  github.sha }}
          
    # Deploy image to Cloud Run
    
    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --quiet \
          --region ${{ env.RUN_REGION }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{  github.sha }} \
          --platform "managed" \
          --allow-unauthenticated
          
    - name: Rollback Release
      if: failure() && steps.create_release.outputs.id != ''
      uses: author/action-rollback@stable
      with:
          # Using a known release ID
          id: ${{ steps.create_release.id }}
          # Using a tag name
#           tag: ${{ steps.autotagger.outputs.tagname }}
          tag: 63
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
